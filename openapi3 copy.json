{
  "openapi": "3.0.1",
  "info": {
    "title": "Marco Polo Entities API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/api/v1/entities"
    }
  ],
  "paths": {
    "/bankAccounts/{id}": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Retrieves bank account details by id.",
        "operationId": "GetBankAccountDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Updates existing entity bank account.",
        "operationId": "UpdateBankAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountUpdateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/{entityId}/bankAccounts": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Retrieves list of entity bank accounts.",
        "operationId": "GetEntityBankAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/size"
          },
          {
            "$ref": "#/components/parameters/includeInactive"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDetailsSearchResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Creates new bank account.",
        "operationId": "CreateBankAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountCreateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/bankAccounts": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Retrieves list of bank accounts defails by filter.",
        "operationId": "GetBankAccounts",
        "parameters": [
          {
            "name": "Query",
            "in": "query",
            "description": "Query",
            "schema": {
              "$ref": "#/components/schemas/BankAccountsSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDetailsSearchResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/bankAccounts/bulk": {
      "post": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Merges changeset to bulk accounts.",
        "operationId": "MergeBankAccounts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountsMergeCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountsMergeResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/bankAccounts/{id}/deactivate": {
      "post": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Endpoint for deactivating bank accounts. Sets IsDeleted to true.",
        "operationId": "DeactivateBankAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonUpdateResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/bankAccounts/{id}/activate": {
      "post": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Endpoint for activating bank accounts. Sets IsDeleted to false.",
        "operationId": "ActivateBankAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonUpdateResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Retrieves list of countries by filter.",
        "operationId": "GetCountries",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Part of the country name filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsoCode",
            "in": "query",
            "description": "Country code filter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountriesSearchModel"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/countries/{countryIso}/jurisdictions": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Retrieves list of jurisdictions by filter.",
        "operationId": "GetJurisdictionsByCountry",
        "parameters": [
          {
            "name": "countryIso",
            "in": "path",
            "description": "Iso Code of the country.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Part of the jurisdiction name filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsoCode",
            "in": "query",
            "description": "Iso Code of the jurisdiction filter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JurisdictionsSearchModel"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/countries/allJurisdictions": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Retrieves list of jurisdictions by filter.",
        "operationId": "GetAllJurisdictions",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Part of the jurisdiction name filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsoCode",
            "in": "query",
            "description": "Iso Code of the jurisdiction filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CountryIso",
            "in": "query",
            "description": "Iso Code of the country.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JurisdictionsSearchModel"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Retrieves list of currencies by filter.",
        "operationId": "GetCurrencies",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Part of the currency name filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsoCode",
            "in": "query",
            "description": "Currency code filter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrenciesSearchModel"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Creates new entity.",
        "operationId": "CreateEntity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitiesCreateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesDetailsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Retrieves list of entities by filter.",
        "operationId": "GetEntities",
        "parameters": [
          {
            "name": "Query",
            "in": "query",
            "description": "Query",
            "schema": {
              "$ref": "#/components/schemas/EntitiesSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesSearchResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/{entityId}/debtors": {
      "get": {
        "tags": [
          "Entities",
          "Debtors"
        ],
        "summary": "Exports entity debtors.",
        "operationId": "ExportDebtors",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Creditor Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportDebtorsResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/debtors": {
      "post": {
        "tags": [
          "Entities",
          "Debtors"
        ],
        "summary": "Imports debtors for other platform.",
        "operationId": "ImportDebtors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportDebtorsResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDebtorsResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/details": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Retrieves detailed list of entities by filter.",
        "operationId": "GetDetailedEntities",
        "parameters": [
          {
            "name": "Query",
            "in": "query",
            "description": "Query",
            "schema": {
              "$ref": "#/components/schemas/EntitiesSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesDetailsSearchResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/{id}/deactivate": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Endpoint for deactivating entities. Sets IsDeleted to true.",
        "operationId": "DeactivateEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonUpdateResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/{id}/activate": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Endpoint for activating entities. Sets IsDeleted to false.",
        "operationId": "ActivateEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonUpdateResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/bulk": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Uploads a bulk of entities.",
        "operationId": "MergeEntities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitiesMergeCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesMergeResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/{id}": {
      "put": {
        "tags": [
          "Entities"
        ],
        "summary": "Updates existing entity.",
        "operationId": "UpdateEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitiesUpdateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesDetailsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Retrieves entity details by id.",
        "operationId": "GetEntityDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesDetailsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/owner": {
      "post": {
        "tags": [
          "Owner"
        ],
        "summary": "Creates Owner Entity Model.",
        "operationId": "CreateOwner",
        "requestBody": {
          "description": "Entity Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerCreateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesDetailsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Owner"
        ],
        "summary": "Updates Owner Entity Model.",
        "operationId": "UpdateOwner",
        "requestBody": {
          "description": "Entity Update Model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerUpdateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesDetailsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Owner"
        ],
        "summary": "Returns Owner Entity Details.",
        "operationId": "GetOwnerDetails",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesDetailsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/owner/x500": {
      "get": {
        "tags": [
          "Owner"
        ],
        "summary": "Returns Owner X500.",
        "operationId": "GetOwnerX500",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/{entityId}/identifiers": {
      "post": {
        "tags": [
          "EntityExternalIdentifiers"
        ],
        "summary": "Creates new entity's external identifier.",
        "operationId": "CreateExternalIdentifier",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalIdentifiersCreateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalIdentifiersDetailsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "get": {
        "tags": [
          "EntityExternalIdentifiers"
        ],
        "summary": "Retrieves list of entity's external identifiers by filter.",
        "operationId": "GetExternalIdentifiers",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalIdentifiersDetailsModel"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/identifiers/{id}": {
      "put": {
        "tags": [
          "EntityExternalIdentifiers"
        ],
        "summary": "Updates existing entity's external identifier.",
        "operationId": "UpdateExternalIdentifier",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalIdentifiersUpdateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalIdentifiersDetailsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "EntityExternalIdentifiers"
        ],
        "summary": "Deletes existing entity's external identifier.",
        "operationId": "DeleteExternalIdentifier",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonUpdateResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UnknownError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Object reference not set to an instance of an object."
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "ForbiddenError": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "test usr"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Authorization failed."
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "ValidationModelError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "'SomeProperty' is required."
          },
          "property": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "SomeProperty"
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "InvalidModelError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationModelError"
            },
            "nullable": true,
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Invalid Model."
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Not Found."
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "CommonUpdateResult": {
        "type": "object",
        "additionalProperties": false,
        "description": "Updated Entity Preview."
      },
      "CommonAddressModel": {
        "$ref": "#/components/schemas/Address"
      },
      "CountriesSearchModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the country.",
            "nullable": true,
            "example": "United States of America"
          },
          "isoCode": {
            "type": "string",
            "description": "Iso Code of the country.",
            "nullable": true,
            "example": "US"
          }
        },
        "additionalProperties": false,
        "description": "Country Details.",
        "nullable": true
      },
      "JurisdictionsSearchModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the jurisdiction.",
            "nullable": true,
            "example": "United States - New York"
          },
          "isoCode": {
            "type": "string",
            "description": "Iso Code of the jurisdiction.",
            "nullable": true,
            "example": "US-NY"
          },
          "countryIso": {
            "type": "string",
            "description": "Iso Code of the country.",
            "nullable": true,
            "example": "US"
          }
        },
        "additionalProperties": false,
        "description": "Jurisdiction Details.",
        "nullable": true
      },
      "CurrenciesSearchModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the currency.",
            "nullable": true,
            "example": "US DOLLAR"
          },
          "isoCode": {
            "type": "string",
            "description": "Iso Code of the currency.",
            "nullable": true,
            "example": "USD"
          }
        },
        "additionalProperties": false,
        "description": "Currency Details.",
        "nullable": true
      },
      "BankAccountsSearchQuery": {
        "type": "object",
        "additionalProperties": false,
        "description": "Bank Accounts Search Query.",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Size of page.",
            "format": "int32",
            "example": 1,
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Size of page.",
            "format": "int32",
            "example": 1,
            "nullable": true
          },
          "includeInactive": {
            "type": "boolean",
            "default": false,
            "description": "Set true to include deactivated records in result."
          },
          "entityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Account Entity Id."
          }
        }
      },
      "BankAccountDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean",
            "description": "Flag for marking deactivated bank accounts.",
            "example": true
          },
          "externalId": {
            "type": "string",
            "description": "External Id.",
            "nullable": true,
            "example": "external uuid"
          },
          "entityId": {
            "type": "string",
            "description": "Id if Entity owning account.",
            "format": "uuid"
          },
          "accountIdentifier": {
            "type": "string",
            "description": "Identifier to be applied to the bank account.",
            "nullable": true,
            "example": "account uuid"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number.",
            "nullable": true,
            "example": "AN-123456"
          },
          "currencyIso": {
            "type": "string",
            "description": "Currency Iso of the account.",
            "nullable": true,
            "example": "USD"
          },
          "beneficiaryName": {
            "type": "string",
            "description": "Name the account is in.",
            "nullable": true,
            "example": "Mr Arthur King"
          },
          "iban": {
            "type": "string",
            "description": "IBAN of account (International Bank Account Number (IBAN)).",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/iban"
            }
          },
          "swift": {
            "type": "string",
            "description": "SWIFT code of account (Society for Worldwide Interbank Financial Telecommunication).",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/swift"
            }
          },
          "sortCode": {
            "type": "string",
            "description": "Standard sort code.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/sortCode"
            }
          },
          "routingNumber": {
            "type": "string",
            "description": "USA Bank identification code.",
            "nullable": true,
            "example": "123456789"
          },
          "bsbNumber": {
            "type": "string",
            "description": "Australian Bank Number.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/routingNumber"
            }
          },
          "bankName": {
            "type": "string",
            "description": "Name of bank.",
            "nullable": true,
            "example": "Bank of America"
          },
          "correspondentSwift": {
            "type": "string",
            "description": "SWIFT code of correspondent bank.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/swift"
            }
          },
          "correspondentBankName": {
            "type": "string",
            "description": "Name of correspondent bank.",
            "nullable": true,
            "example": "Diamand Bank"
          }
        },
        "additionalProperties": false,
        "description": "Bank Account Details.",
        "nullable": true
      },
      "BankAccountCreateCommand": {
        "type": "object",
        "properties": {
          "externalId": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "External Id.",
            "nullable": true,
            "example": "external uuid"
          },
          "accountIdentifier": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Identifier to be applied to the bank account.",
            "nullable": true,
            "example": "account uuid"
          },
          "accountNumber": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Account number.",
            "nullable": true,
            "example": "AN-123456"
          },
          "currencyIso": {
            "type": "string",
            "description": "ISO code of the account currency.",
            "nullable": true,
            "example": "USD"
          },
          "beneficiaryName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name the account is in.",
            "nullable": true,
            "example": "Mr Arthur King"
          },
          "iban": {
            "pattern": "^[A-Z]{2}[0-9A-Z]{14,32}$",
            "type": "string",
            "description": "IBAN of account (International Bank Account Number (IBAN)).",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/iban"
            }
          },
          "swift": {
            "pattern": "^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$",
            "type": "string",
            "description": "SWIFT code of account (Society for Worldwide Interbank Financial Telecommunication).",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/swift"
            }
          },
          "sortCode": {
            "pattern": "^\\d{2}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Standard sort code.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/sortCode"
            }
          },
          "routingNumber": {
            "pattern": "^\\d{9}$",
            "type": "string",
            "description": "USA Bank identification code.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/routingNumber"
            }
          },
          "bsbNumber": {
            "pattern": "^\\d{3}-\\d{3}$",
            "type": "string",
            "description": "Australian Bank Number.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/bsbNumber"
            }
          },
          "bankName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name of bank.",
            "nullable": true,
            "example": "Bank of America"
          },
          "correspondentSwift": {
            "pattern": "^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$",
            "type": "string",
            "description": "SWIFT code of correspondent bank.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/swift"
            }
          },
          "correspondentBankName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name of correspondent bank.",
            "nullable": true,
            "example": "Diamand Bank"
          }
        },
        "additionalProperties": false,
        "description": "Creates new bank account.",
        "nullable": true
      },
      "BankAccountUpdateCommand": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Flag for deactivating bank accounts.",
            "nullable": true,
            "example": true
          },
          "externalId": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "External Id.",
            "nullable": true,
            "example": "external uuid"
          },
          "accountIdentifier": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Identifier to be applied to the bank account.",
            "nullable": true,
            "example": "account uuid"
          },
          "accountNumber": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Account number.",
            "nullable": true,
            "example": "AN-123456"
          },
          "currencyIso": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Currency Iso of the account.",
            "nullable": true,
            "example": "USD"
          },
          "beneficiaryName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name the account is in.",
            "nullable": true,
            "example": "Mr Arthur King"
          },
          "iban": {
            "pattern": "^[A-Z]{2}[0-9A-Z]{14,32}$",
            "type": "string",
            "description": "IBAN of account (International Bank Account Number (IBAN)).",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/iban"
            }
          },
          "swift": {
            "pattern": "^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$",
            "type": "string",
            "description": "SWIFT code of account (Society for Worldwide Interbank Financial Telecommunication).",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/swift"
            }
          },
          "sortCode": {
            "pattern": "^\\d{2}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Standard sort code.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/sortCode"
            }
          },
          "routingNumber": {
            "pattern": "^\\d{9}$",
            "type": "string",
            "description": "USA Bank identification code.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/routingNumber"
            }
          },
          "bsbNumber": {
            "pattern": "^\\d{3}-\\d{3}$",
            "type": "string",
            "description": "Australian Bank Number.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/bsbNumber"
            }
          },
          "bankName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name of bank.",
            "nullable": true,
            "example": "Bank of America"
          },
          "correspondentSwift": {
            "pattern": "^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$",
            "type": "string",
            "description": "SWIFT code of correspondent bank.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/swift"
            }
          },
          "correspondentBankName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name of correspondent bank.",
            "nullable": true,
            "example": "Diamand Bank"
          }
        },
        "additionalProperties": false,
        "description": "Updates existing entity bank account.",
        "nullable": true
      },
      "BankAccountDetailsSearchResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccountDetails"
            },
            "description": "List with elements from selected page.",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages (for given size).",
            "format": "int32",
            "example": 10
          },
          "pageNumber": {
            "type": "integer",
            "description": "Order number of page.",
            "format": "int32",
            "example": 2
          },
          "size": {
            "type": "integer",
            "description": "Size of page.",
            "format": "int32",
            "example": 1
          },
          "totalElements": {
            "type": "integer",
            "description": "Total number of elements.",
            "format": "int32",
            "example": 10
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "BankAccountsMergeCommandItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Bank Account Id.",
            "format": "uuid",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Flag for deactivating bank accounts.",
            "nullable": true,
            "example": true
          },
          "externalId": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "External Id.",
            "nullable": true,
            "example": "external uuid"
          },
          "entityName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name of related entity.",
            "nullable": true,
            "example": "registered bank entity"
          },
          "accountIdentifier": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Identifier to be applied to the bank account.",
            "nullable": true,
            "example": "account uuid"
          },
          "accountNumber": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Account number.",
            "nullable": true,
            "example": "AN-123456"
          },
          "currencyIso": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "ISO code of the account currency.",
            "nullable": true,
            "example": "USD"
          },
          "beneficiaryName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name the account is in.",
            "nullable": true,
            "example": "Mr Arthur King"
          },
          "iban": {
            "pattern": "^[A-Z]{2}[0-9A-Z]{14,32}$",
            "type": "string",
            "description": "IBAN of account (International Bank Account Number (IBAN)).",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/iban"
            }
          },
          "swift": {
            "pattern": "^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$",
            "type": "string",
            "description": "SWIFT code of account (Society for Worldwide Interbank Financial Telecommunication).",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/swift"
            }
          },
          "sortCode": {
            "pattern": "^\\d{2}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Standard sort code.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/sortCode"
            }
          },
          "routingNumber": {
            "pattern": "^\\d{9}$",
            "type": "string",
            "description": "USA Bank identification code.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/routingNumber"
            }
          },
          "bsbNumber": {
            "pattern": "^\\d{3}-\\d{3}$",
            "type": "string",
            "description": "Australian Bank Number.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/bsbNumber"
            }
          },
          "bankName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name of bank.",
            "example": "Bank of America"
          },
          "correspondentSwift": {
            "pattern": "^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$",
            "type": "string",
            "description": "SWIFT code of correspondent bank.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/swift"
            }
          },
          "correspondentBankName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Name of correspondent bank.",
            "nullable": true,
            "example": "Diamand Bank"
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "BankAccountsMergeCommand": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccountsMergeCommandItem"
            }
          }
        },
        "additionalProperties": false,
        "description": "Merges changeset to bulk accounts."
      },
      "BankAccountsMergeResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordUpdateResult"
            },
            "nullable": true,
            "example": [
              {
                "id": null,
                "status": "Failed",
                "errors": [
                  {
                    "message": "'SomeProperty' is required.",
                    "property": "SomeProperty"
                  }
                ]
              },
              {
                "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "status": "Created",
                "errors": []
              }
            ]
          }
        },
        "additionalProperties": false,
        "description": "Updates existing entity bank account.",
        "nullable": true
      },
      "EntitiesCreateContact": {
        "required": [
          "registeredName"
        ],
        "type": "object",
        "properties": {
          "registeredName": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Name as showing in corporate registration.",
            "example": "ERN-1715"
          },
          "tradingName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Also Known As.",
            "nullable": true,
            "example": "Entity TN"
          },
          "phoneNumber": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Phone Number.",
            "nullable": true,
            "example": "(079)-89-36-554"
          },
          "siteUrl": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Url.",
            "nullable": true,
            "example": "https://interestingsite.com"
          }
        },
        "additionalProperties": false,
        "description": "Bundle of Entity Contacts."
      },
      "EntitiesCreateIdentifier": {
        "type": "object",
        "properties": {
          "x500": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "As per X500 standard.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/x500Name"
            }
          },
          "sic": {
            "pattern": "^\\d{4}$",
            "type": "string",
            "description": "SIC Code https://en.wikipedia.org/wiki/Standard_Industrial_Classification.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/sic"
            }
          },
          "ein": {
            "pattern": "^\\d{2}-\\d{7}$",
            "type": "string",
            "description": "USA Employer Identification Number https://www.investopedia.com/terms/e/employer-identification-number.asp.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/ein"
            }
          },
          "vat": {
            "pattern": "^[0-9A-Z]{2,12}$",
            "type": "string",
            "description": "VAT Tax id number https://www.gov.uk/guidance/vat-eu-country-codes-vat-numbers-and-vat-in-other-languages.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/vat"
            }
          },
          "duns": {
            "pattern": "^\\d{9}$",
            "type": "string",
            "description": "Number issued by Dun and Bradstreet https://en.wikipedia.org/wiki/Data_Universal_Numbering_System.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/duns"
            }
          },
          "lei": {
            "pattern": "^[0-9A-Z]{18}[0-9]{2}$",
            "type": "string",
            "description": "Legal Entity Identifier https://www.gleif.org/en/about-lei/iso-17442-the-lei-code-structure.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/lei"
            }
          },
          "naics": {
            "pattern": "^\\d{5,6}$",
            "type": "string",
            "description": "North American Industry Classification https://en.wikipedia.org/wiki/North_American_Industry_Classification_System.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/naics"
            }
          },
          "taxId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "General Purpose Tax ID may be jurisdiction dependent.",
            "nullable": true,
            "example": "TID-u123s"
          },
          "registrationId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Government issued business ID number.",
            "nullable": true,
            "example": "RID-7722u"
          },
          "mastercardTrackId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "MasterCard Track ID.",
            "nullable": true,
            "example": "mastercard track id"
          }
        },
        "additionalProperties": false,
        "description": "Bundle of Entity Identifiers.",
        "nullable": true
      },
      "EntitiesCreateExternalIdentifier": {
        "required": [
          "externalReference",
          "externalId"
        ],
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "External Reference.",
            "example": "ER-172WE"
          },
          "externalId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "External ID.",
            "example": "EID-5566"
          }
        },
        "additionalProperties": false,
        "description": "Alternative reference ID.",
        "nullable": true
      },
      "EntitiesCreateCommand": {
        "required": [
          "contact",
          "registeredAddress"
        ],
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/EntitiesCreateContact"
          },
          "identifier": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier"
          },
          "jurisdictionIso": {
            "type": "string",
            "description": "Jurisdiction Iso of the entity.",
            "nullable": true,
            "example": "US-NY"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/CommonAddressModel"
          },
          "registeredAddress": {
            "$ref": "#/components/schemas/CommonAddressModel"
          },
          "externalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesCreateExternalIdentifier"
            },
            "description": "Multiple alternative reference IDs.",
            "nullable": true
          },
          "debtors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of debtor names.",
            "nullable": true,
            "example": [
              "DRN-17151",
              "DRN-17152"
            ]
          },
          "creditors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of creditor names.",
            "nullable": true,
            "example": [
              "CRN-17151",
              "CRN-17152"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Creates new entity."
      },
      "EntitiesDetailsExternalIdentifier": {
        "type": "object",
        "properties": {
          "externalReference": {
            "type": "string",
            "description": "External Reference.",
            "nullable": true,
            "example": "ER-15658u"
          },
          "externalId": {
            "type": "string",
            "description": "External ID.",
            "nullable": true,
            "example": "EID-we34"
          }
        },
        "additionalProperties": false,
        "description": "Alternative reference ID.",
        "nullable": true
      },
      "EntitiesDetailsModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityBase"
          },
          {
            "type": "object",
            "properties": {
              "externalIdentifiers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitiesDetailsExternalIdentifier"
                },
                "description": "Multiple alternative reference IDs."
              },
              "debtors": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of debtor names.",
                "example": [
                  "DRN-17151",
                  "DRN-17152"
                ]
              },
              "creditors": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of creditor names.",
                "example": [
                  "CRN-17151",
                  "CRN-17152"
                ]
              }
            },
            "additionalProperties": false,
            "description": "Entity details.",
            "nullable": true
          }
        ]
      },
      "EntitiesSearchModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of an entity.",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean",
            "description": "Flag for marking deactivated entities.",
            "example": true
          },
          "registeredName": {
            "type": "string",
            "description": "Name.",
            "nullable": true,
            "example": "RN-1715"
          },
          "registeredAddressCity": {
            "type": "string",
            "description": "City of the Registered Address.",
            "nullable": true,
            "example": "NY"
          },
          "registeredAddressCountryName": {
            "type": "string",
            "description": "Country Name of the Registered Address.",
            "nullable": true,
            "example": "United States of America"
          },
          "registeredAddressCountryIso": {
            "type": "string",
            "description": "Iso Code of Registered Address country.",
            "nullable": true,
            "example": "US"
          },
          "jurisdictionIso": {
            "type": "string",
            "description": "Jurisdiction Iso of the entity.",
            "nullable": true,
            "example": "US-NY"
          },
          "lei": {
            "type": "string",
            "description": "Legal Entity Identifier of entity.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/lei"
            }
          },
          "x500": {
            "type": "string",
            "description": "Entity x500 Name.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/x500Name"
            }
          },
          "isNetworkMember": {
            "type": "boolean",
            "description": "Network member status of entity.",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Entity Preview.",
        "nullable": true
      },
      "EntitiesSearchResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesSearchModel"
            },
            "description": "List with elements from selected page.",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages (for given size).",
            "format": "int32",
            "example": 10
          },
          "pageNumber": {
            "type": "integer",
            "description": "Order number of page.",
            "format": "int32",
            "example": 2
          },
          "size": {
            "type": "integer",
            "description": "Size of page.",
            "format": "int32",
            "example": 1
          },
          "totalElements": {
            "type": "integer",
            "description": "Total number of elements.",
            "format": "int32",
            "example": 10
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "EntitiesSearchQuery": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Size of page.",
            "format": "int32",
            "example": 1,
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Size of page.",
            "format": "int32",
            "example": 1,
            "nullable": true
          },
          "includeInactive": {
            "type": "boolean",
            "default": false,
            "description": "Set true to include deactivated records in result."
          },
          "registeredName": {
            "type": "string",
            "description": "Part of the company name filter.",
            "nullable": true
          },
          "registeredAddressCountryIso": {
            "type": "string",
            "description": "Iso Code of entity Registered Address country filter.",
            "nullable": true
          },
          "jurisdictionIso": {
            "type": "string",
            "description": "Jurisdiction Iso of the entity filter.",
            "nullable": true
          },
          "lei": {
            "type": "string",
            "description": "Part of the entity lei filter.",
            "nullable": true
          },
          "x500": {
            "type": "string",
            "description": "Part of the entity x500 filter.",
            "nullable": true
          },
          "isNetworkMember": {
            "type": "boolean",
            "description": "Network member status of entity filter.",
            "nullable": true
          },
          "isDebtor": {
            "type": "boolean",
            "description": "Flag for returning only debtors.",
            "nullable": true
          },
          "creditorId": {
            "type": "string",
            "format": "uuid",
            "description": "Creditor Id.",
            "nullable": true
          },
          "creditorName": {
            "type": "string",
            "description": "Creditor Name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "EntitiesDetailsSearchResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesDetailsModel"
            },
            "description": "List with elements from selected page.",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages (for given size).",
            "format": "int32",
            "example": 10
          },
          "pageNumber": {
            "type": "integer",
            "description": "Order number of page.",
            "format": "int32",
            "example": 2
          },
          "size": {
            "type": "integer",
            "description": "Size of page.",
            "format": "int32",
            "example": 1
          },
          "totalElements": {
            "type": "integer",
            "description": "Total number of elements.",
            "format": "int32",
            "example": 10
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "EntitiesMergeContact": {
        "required": [
          "registeredName"
        ],
        "type": "object",
        "properties": {
          "registeredName": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Name as showing in corporate registration.",
            "example": "ERN-1715"
          },
          "tradingName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Also Known As.",
            "nullable": true,
            "example": "traid name"
          },
          "phoneNumber": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Phone Number.",
            "nullable": true,
            "example": "(079)-89-36-554"
          },
          "siteUrl": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Url.",
            "nullable": true,
            "example": "https://interestingsite.com"
          }
        },
        "additionalProperties": false,
        "description": "Bundle of Entity Contacts."
      },
      "EntitiesMergeIdentifier": {
        "type": "object",
        "properties": {
          "x500": {
            "type": "string",
            "description": "As per X500 standard.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/x500Name"
            }
          },
          "sic": {
            "pattern": "^\\d{4}$",
            "type": "string",
            "description": "SIC Code https://en.wikipedia.org/wiki/Standard_Industrial_Classification.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/sic"
            }
          },
          "ein": {
            "pattern": "^\\d{2}-\\d{7}$",
            "type": "string",
            "description": "USA Employer Identification Number https://www.investopedia.com/terms/e/employer-identification-number.asp.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/ein"
            }
          },
          "vat": {
            "pattern": "^[0-9A-Z]{2,12}$",
            "type": "string",
            "description": "VAT Tax id number https://www.gov.uk/guidance/vat-eu-country-codes-vat-numbers-and-vat-in-other-languages.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/vat"
            }
          },
          "duns": {
            "pattern": "^\\d{9}$",
            "type": "string",
            "description": "Number issued by Dun and Bradstreet https://en.wikipedia.org/wiki/Data_Universal_Numbering_System.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/duns"
            }
          },
          "lei": {
            "pattern": "^[0-9A-Z]{18}[0-9]{2}$",
            "type": "string",
            "description": "Legal Entity Identifier https://www.gleif.org/en/about-lei/iso-17442-the-lei-code-structure.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/lei"
            }
          },
          "naics": {
            "pattern": "^\\d{5,6}$",
            "type": "string",
            "description": "North American Industry Classification https://en.wikipedia.org/wiki/North_American_Industry_Classification_System.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/naics"
            }
          },
          "taxId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "General Purpose Tax ID may be jurisdiction dependent.",
            "nullable": true,
            "example": "TID-1qa"
          },
          "registrationId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Government issued business ID number.",
            "nullable": true,
            "example": "RID-32kc"
          },
          "mastercardTrackId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "MasterCard Track ID.",
            "nullable": true,
            "example": "mastercard track id"
          }
        },
        "additionalProperties": false,
        "description": "Bundle of Entity Identifiers.",
        "nullable": true
      },
      "EntitiesMergeAddress": {
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Address Line 1.",
            "nullable": true,
            "example": "123 Main Street Room 22"
          },
          "line2": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Address Line 2.",
            "nullable": true,
            "example": "University Dorm"
          },
          "zipCode": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Zip Code.",
            "nullable": true,
            "example": "90060"
          },
          "city": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "City.",
            "nullable": true,
            "example": "New York"
          },
          "state": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "State.",
            "nullable": true,
            "example": "NY"
          },
          "countryIso": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Iso of a country.",
            "nullable": true,
            "example": "US"
          }
        },
        "additionalProperties": false,
        "description": "Model of an address.",
        "nullable": true
      },
      "EntitiesMergeExternalIdentifier": {
        "required": [
          "externalReference"
        ],
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "External Reference.",
            "example": "ref"
          },
          "externalId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "External ID.",
            "nullable": true,
            "example": "1"
          }
        },
        "additionalProperties": false,
        "description": "Alternative reference ID.",
        "nullable": true
      },
      "EntitiesMergeCommandItem": {
        "required": [
          "contact",
          "registeredAddress"
        ],
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Flag for deactivating entities.",
            "nullable": true,
            "example": true
          },
          "contact": {
            "$ref": "#/components/schemas/EntitiesMergeContact"
          },
          "identifier": {
            "$ref": "#/components/schemas/EntitiesMergeIdentifier"
          },
          "jurisdictionIso": {
            "type": "string",
            "description": "Jurisdiction Iso of the entity.",
            "nullable": true,
            "example": "US-NY"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/EntitiesMergeAddress"
          },
          "registeredAddress": {
            "$ref": "#/components/schemas/EntitiesMergeAddress"
          },
          "externalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesMergeExternalIdentifier"
            },
            "description": "Multiple alternative reference IDs.",
            "nullable": true
          },
          "debtors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of debtor names.",
            "nullable": true,
            "example": [
              "DRN-17151",
              "DRN-17152"
            ]
          },
          "creditors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of creditor names.",
            "nullable": true,
            "example": [
              "DRN-17151",
              "DRN-17152"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Uploads an entity."
      },
      "EntitiesMergeCommand": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesMergeCommandItem"
            },
            "description": "List of entities to be uploaded."
          }
        },
        "additionalProperties": false,
        "description": "Uploads a bulk of entities."
      },
      "EntitiesMergeResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordUpdateResult"
            },
            "nullable": true,
            "example": [
              {
                "id": null,
                "status": "Failed",
                "errors": [
                  {
                    "message": "'SomeProperty' is required.",
                    "property": "SomeProperty"
                  }
                ]
              },
              {
                "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "status": "Created",
                "errors": []
              }
            ]
          }
        },
        "additionalProperties": false,
        "nullable": true
      },
      "EntitiesUpdateContact": {
        "type": "object",
        "properties": {
          "registeredName": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Name as showing in corporate registration.",
            "nullable": true,
            "example": "ERN-1715"
          },
          "tradingName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Also Known As.",
            "nullable": true,
            "example": "traiding name"
          },
          "phoneNumber": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Phone Number.",
            "nullable": true,
            "example": "(079)-89-36-554"
          },
          "siteUrl": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Url.",
            "nullable": true,
            "example": "https://interestingsite.com"
          }
        },
        "additionalProperties": false,
        "description": "Bundle of Entity Contacts.",
        "nullable": true
      },
      "EntitiesUpdateIdentifier": {
        "type": "object",
        "properties": {
          "x500": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "As per X500 standard.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/x500Name"
            }
          },
          "sic": {
            "pattern": "^\\d{4}$",
            "type": "string",
            "description": "SIC Code https://en.wikipedia.org/wiki/Standard_Industrial_Classification.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/sic"
            }
          },
          "ein": {
            "pattern": "^\\d{2}-\\d{7}$",
            "type": "string",
            "description": "USA Employer Identification Number https://www.investopedia.com/terms/e/employer-identification-number.asp.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/ein"
            }
          },
          "vat": {
            "pattern": "^[0-9A-Z]{2,12}$",
            "type": "string",
            "description": "VAT Tax id number https://www.gov.uk/guidance/vat-eu-country-codes-vat-numbers-and-vat-in-other-languages.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/vat"
            }
          },
          "duns": {
            "pattern": "^\\d{9}$",
            "type": "string",
            "description": "Number issued by Dun and Bradstreet https://en.wikipedia.org/wiki/Data_Universal_Numbering_System.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/duns"
            }
          },
          "lei": {
            "pattern": "^[0-9A-Z]{18}[0-9]{2}$",
            "type": "string",
            "description": "Legal Entity Identifier https://www.gleif.org/en/about-lei/iso-17442-the-lei-code-structure.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/lei"
            }
          },
          "naics": {
            "pattern": "^\\d{5,6}$",
            "type": "string",
            "description": "North American Industry Classification https://en.wikipedia.org/wiki/North_American_Industry_Classification_System.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/naics"
            }
          },
          "taxId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "General Purpose Tax ID may be jurisdiction dependent.",
            "nullable": true,
            "example": "tax ID-17-09"
          },
          "registrationId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Government issued business ID number.",
            "nullable": true,
            "example": "REG-0809-76"
          },
          "mastercardTrackId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "MasterCard Track ID.",
            "nullable": true,
            "example": "mastercard track id"
          }
        },
        "additionalProperties": false,
        "description": "Bundle of Entity Identifiers.",
        "nullable": true
      },
      "EntitiesUpdateAddress": {
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Address Line 1 or null.",
            "nullable": true,
            "example": "123 Main Street Room 22"
          },
          "line2": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Address Line 2 or null.",
            "nullable": true,
            "example": "University Dorm"
          },
          "zipCode": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Zip Code or null.",
            "nullable": true,
            "example": "90060"
          },
          "city": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "City or null.",
            "nullable": true,
            "example": "New York"
          },
          "state": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "State or null.",
            "nullable": true,
            "example": "NY"
          },
          "countryIso": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Iso of a country or null.",
            "nullable": true,
            "example": "US"
          }
        },
        "additionalProperties": false,
        "description": "Entity address update model.",
        "nullable": true
      },
      "EntitiesUpdateExternalIdentifier": {
        "required": [
          "externalReference"
        ],
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "External Reference.",
            "example": "ER-r3f"
          },
          "externalId": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "External ID.",
            "nullable": true,
            "example": "ID-44-05-50"
          }
        },
        "additionalProperties": false,
        "description": "Alternative reference ID.",
        "nullable": true
      },
      "EntitiesUpdateCommand": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/EntitiesUpdateContact"
          },
          "identifier": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier"
          },
          "isActive": {
            "type": "boolean",
            "description": "Flag for deactivating entities.",
            "nullable": true,
            "example": true
          },
          "jurisdictionIso": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Jurisdiction Iso of the entity.",
            "nullable": true,
            "example": "US-NY"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/EntitiesUpdateAddress"
          },
          "registeredAddress": {
            "$ref": "#/components/schemas/EntitiesUpdateAddress"
          },
          "externalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesUpdateExternalIdentifier"
            },
            "description": "Multiple alternative reference IDs.",
            "nullable": true
          },
          "debtors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of debtor names.",
            "nullable": true,
            "example": [
              "DRN-17151",
              "DRN-17152"
            ]
          },
          "creditors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of creditor names.",
            "nullable": true,
            "example": [
              "CRN-17151",
              "CRN-17152"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Updates existing entity.",
        "nullable": true
      },
      "OwnerCreateCommand": {
        "description": "Creates owner entity.",
        "additionalProperties": false,
        "required": [
          "contact",
          "registeredAddress"
        ],
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/EntitiesCreateCommand/properties/contact"
          },
          "identifier": {
            "$ref": "#/components/schemas/OwnerCreateIdentifier"
          },
          "jurisdictionIso": {
            "$ref": "#/components/schemas/EntitiesCreateCommand/properties/jurisdictionIso"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/EntitiesCreateCommand/properties/shippingAddress"
          },
          "registeredAddress": {
            "$ref": "#/components/schemas/EntitiesCreateCommand/properties/registeredAddress"
          },
          "externalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesCreateExternalIdentifier"
            },
            "description": "Multiple alternative reference IDs.",
            "nullable": true
          }
        }
      },
      "OwnerCreateIdentifier": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sic": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/sic"
          },
          "ein": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/ein"
          },
          "vat": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/vat"
          },
          "duns": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/duns"
          },
          "lei": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/lei"
          },
          "naics": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/naics"
          },
          "taxId": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/taxId"
          },
          "registrationId": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/registrationId"
          },
          "mastercardTrackId": {
            "$ref": "#/components/schemas/EntitiesCreateIdentifier/properties/mastercardTrackId"
          }
        },
        "description": "Bundle of Entity Identifiers."
      },
      "OwnerUpdateCommand": {
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/EntitiesUpdateCommand/properties/contact"
          },
          "identifier": {
            "$ref": "#/components/schemas/OwnerUpdateIdentifier"
          },
          "jurisdictionIso": {
            "$ref": "#/components/schemas/EntitiesUpdateCommand/properties/jurisdictionIso"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/EntitiesUpdateCommand/properties/shippingAddress"
          },
          "registeredAddress": {
            "$ref": "#/components/schemas/EntitiesUpdateCommand/properties/registeredAddress"
          },
          "externalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitiesUpdateExternalIdentifier"
            },
            "description": "Multiple alternative reference IDs.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Updates owner entity."
      },
      "OwnerUpdateIdentifier": {
        "properties": {
          "sic": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/sic"
          },
          "ein": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/ein"
          },
          "vat": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/vat"
          },
          "duns": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/duns"
          },
          "lei": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/lei"
          },
          "naics": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/naics"
          },
          "taxId": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/taxId"
          },
          "registrationId": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/registrationId"
          },
          "mastercardTrackId": {
            "$ref": "#/components/schemas/EntitiesUpdateIdentifier/properties/mastercardTrackId"
          }
        },
        "additionalProperties": false,
        "description": "Bundle of Entity Identifiers."
      },
      "ExternalIdentifiersCreateCommand": {
        "required": [
          "externalReference",
          "externalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalReference": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "External Reference.",
            "example": "ref"
          },
          "externalId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "External ID.",
            "example": "1"
          }
        },
        "description": "Entity's alternative reference ID.",
        "nullable": true
      },
      "ExternalIdentifiersDetailsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "External identifier Id.",
            "format": "uuid"
          },
          "externalReference": {
            "type": "string",
            "description": "External Reference.",
            "nullable": true,
            "example": "ref"
          },
          "externalId": {
            "type": "string",
            "description": "External ID.",
            "nullable": true,
            "example": "1"
          }
        },
        "description": "Entity's alternative reference ID.",
        "nullable": true
      },
      "ExternalIdentifiersUpdateCommand": {
        "required": [
          "externalReference",
          "externalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalReference": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "External Reference.",
            "example": "ref"
          },
          "externalId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "External ID.",
            "example": "1"
          }
        },
        "description": "Entity's alternative reference ID.",
        "nullable": true
      },
      
      "Address": {
        "required": [
          "city",
          "countryIso",
          "line1",
          "zipCode"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "line1": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Address Line 1.",
            "example": "123 Main Street Room 22"
          },
          "line2": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Address Line 2.",
            "nullable": true,
            "example": "University Dorm"
          },
          "zipCode": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Zip Code.",
            "example": "90060"
          },
          "city": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "City.",
            "example": "New York"
          },
          "state": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "State.",
            "nullable": true,
            "example": "NY"
          },
          "countryIso": {
            "minLength": 1,
            "type": "string",
            "description": "Iso of a country.",
            "example": "US"
          }
        },
        "nullable": true,
        "description": "Model of an address."
      },      
      "EntityIdentifierBase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "x500": {
            "type": "string",
            "description": "As per X500 standard.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/x500Name"
            }
          },
          "sic": {
            "type": "string",
            "description": "SIC Code https://en.wikipedia.org/wiki/Standard_Industrial_Classification.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/sic"
            }
          },
          "ein": {
            "type": "string",
            "description": "USA Employer Identification Number https://www.investopedia.com/terms/e/employer-identification-number.asp.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/ein"
            }
          },
          "vat": {
            "type": "string",
            "description": "VAT Tax id number https://www.gov.uk/guidance/vat-eu-country-codes-vat-numbers-and-vat-in-other-languages.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/vat"
            }
          },
          "duns": {
            "type": "string",
            "description": "Number issued by Dun and Bradstreet https://en.wikipedia.org/wiki/Data_Universal_Numbering_System.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/duns"
            }
          },
          "lei": {
            "type": "string",
            "description": "Legal Entity Identifier https://www.gleif.org/en/about-lei/iso-17442-the-lei-code-structure.",
            "nullable": true,
            "example": {
              "$ref": "#/components/examples/validIdentifiers/value/lei"
            }
          },
          "naics": {
            "type": "string",
            "description": "North American Industry Classification https://en.wikipedia.org/wiki/North_American_Industry_Classification_System.",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "General Purpose Tax ID may be jurisdiction dependent.",
            "nullable": true,
            "example": "TID-u123s"
          },
          "registrationId": {
            "type": "string",
            "description": "Government issued business ID number.",
            "nullable": true,
            "example": "RID-7722u"
          },
          "mastercardTrackId": {
            "type": "string",
            "description": "MasterCard Track ID.",
            "nullable": true,
            "example": "mastercard track id"
          }
        },
        "description": "Bundle of Entity Identifiers.",
        "nullable": true
      },
      "EntityContactBase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registeredName": {
            "type": "string",
            "description": "Name as showing in corporate registration.",
            "nullable": true,
            "example": "ERN-1715"
          },
          "tradingName": {
            "type": "string",
            "description": "Trading Name, Also Known As.",
            "nullable": true,
            "example": "Entity TN"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone Number.",
            "nullable": true,
            "example": "(079)-89-36-554"
          },
          "siteUrl": {
            "type": "string",
            "description": "Url.",
            "nullable": true,
            "example": "https://interestingsite.com"
          }
        },
        "description": "Bundle of Entity Contacts.",
        "nullable": true
      },
      "EntityBase": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "registeredAddress",
          "contact",
          "isActive"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Entity Id.",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean",
            "description": "Flag for marking deactivated entities.",
            "example": true
          },
          "contact": {
            "$ref": "#/components/schemas/EntityContactBase"
          },
          "identifier": {
            "$ref": "#/components/schemas/EntityIdentifierBase"
          },
          "isNetworkMember": {
            "type": "boolean",
            "description": "Indicates whether current entity is network member or not.",
            "example": true
          },
          "jurisdictionIso": {
            "type": "string",
            "description": "Jurisdiction Iso of the entity.",
            "nullable": true,
            "example": "US-NY"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "registeredAddress": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "RecordUpdateStatus": {
        "enum": [
          "Failed",
          "Created",
          "Updated"
        ],
        "type": "string",
        "description": "Represents result status."
      },
      "RecordUpdateResult": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RecordUpdateStatus"
          },
          "id": {
            "type": "string",
            "description": "Id of created/updated record if succeed.",
            "format": "uuid",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationModelError"
            },
            "description": "Validation errors.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Uploaded item result.",
        "nullable": true
      },
      "DebtorEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityBase"
          },
          {
            "properties": {
              "CreditorName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ExportDebtorsResult": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DebtorEntity"
        }
      },
      "ImportDebtorsResult": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RecordUpdateResult"
        }
      }
    },
    "parameters": {
      "id": {
        "name": "id",
        "in": "path",
        "description": "Identifier of the model.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "entityId": {
        "name": "entityId",
        "in": "path",
        "description": "Identifier of the entity.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "includeInactive": {
        "name": "IncludeInactive",
        "in": "query",
        "description": "Set true to include deactivated records in result.",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "page": {
        "name": "Page",
        "in": "query",
        "description": "Order number of page.",
        "schema": {
          "minimum": 0,
          "type": "integer",
          "format": "int32"
        }
      },
      "size": {
        "name": "Size",
        "in": "query",
        "description": "Number of records to return.",
        "schema": {
          "minimum": 0,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "responses": {
      "InvalidRequest": {
        "description": "Invalid Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InvalidModelError"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ForbiddenError"
            }
          }
        }
      },
      "NotFound": {
        "description": "Entity not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotFoundError"
            }
          }
        }
      },
      "ServerError": {
        "description": "Unknown Exception",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UnknownError"
            }
          }
        }
      }
    },
    "examples": {
      "validIdentifiers": {
        "value": {
          "x500Name": "CN=Peter Ivanovich, ou=Entities Service Team, o=TradeIX, L=Lviv, S=UA, C=UA",
          "sic": "1234",
          "iban": "QW12345678901234",
          "swift": "WESTGBAV",
          "sortCode": "12-34-56",
          "routingNumber": "123456789",
          "bsbNumber": "123-456",
          "ein": "12-3456789",
          "vat": "QW124567890",
          "naics": "123456",
          "duns": "123456789",
          "lei": "18DIGITSANDLETTERS12"
        }
      }
    }
  }
}